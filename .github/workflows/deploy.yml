name: Deploy to Azure App Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: darren-freimuth-portfolio
  AZURE_WEBAPP_PACKAGE_PATH: '.'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate HTML
      run: |
        echo "Current directory: $(pwd)"
        echo "Files being validated:"
        ls -la index.html pages/*.html 2>/dev/null || echo "Checking files individually:"
        ls -la index.html
        ls -la pages/
        echo "Running HTML validation..."
        npm run test:html
        
    - name: Lint CSS
      run: npm run test:css
        
    - name: Lint JavaScript
      run: npm run test:js
        
    - name: Create deployment artifact
      run: |
        mkdir -p deployment
        # Copy specific files and directories needed for deployment
        cp index.html deployment/
        cp -r css deployment/
        cp -r js deployment/
        cp -r pages deployment/
        cp -r assets deployment/
        cp package.json deployment/
        cp web.config deployment/
        # Copy any other root-level files that might be needed
        find . -maxdepth 1 -name "*.md" -exec cp {} deployment/ \;
        find . -maxdepth 1 -name "*.json" ! -name "package*.json" -exec cp {} deployment/ \;
        # Exclude unnecessary files/directories
        echo "Deployment artifact created successfully"
        
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: portfolio-website
        path: deployment/

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: false # Temporarily disable deployment until Azure credentials are configured
    environment: production
    
    steps:
    - name: Download deployment artifact
      uses: actions/download-artifact@v4
      with:
        name: portfolio-website
        path: ./deployment
        
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ./deployment
        
    - name: Cleanup
      if: always()
      run: |
        az logout || true

  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net
        uploadArtifacts: true
        temporaryPublicStorage: true
